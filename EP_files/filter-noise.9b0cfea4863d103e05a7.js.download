/*! For license information please see filter-noise.9b0cfea4863d103e05a7.js.LICENSE.txt */
(self.webpackChunkep_web=self.webpackChunkep_web||[]).push([["../libs/wp/@pixi/filter-noise/filter-noise"],{"./node_modules/@pixi/filter-noise/lib/filter-noise.es.js":function(e,o,n){"use strict";n.d(o,{L:function(){return i}});var r=n("./node_modules/@pixi/core/lib/core.es.js"),extendStatics=function(e,o){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var n in o)o.hasOwnProperty(n)&&(e[n]=o[n])})(e,o)};var i=function(e){function NoiseFilter(o,n){void 0===o&&(o=.5),void 0===n&&(n=Math.random());var i=e.call(this,r.Y9,"precision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform float uNoise;\nuniform float uSeed;\nuniform sampler2D uSampler;\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main()\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    float randomValue = rand(gl_FragCoord.xy * uSeed);\n    float diff = (randomValue - 0.5) * uNoise;\n\n    // Un-premultiply alpha before applying the color matrix. See issue #3539.\n    if (color.a > 0.0) {\n        color.rgb /= color.a;\n    }\n\n    color.r += diff;\n    color.g += diff;\n    color.b += diff;\n\n    // Premultiply alpha again.\n    color.rgb *= color.a;\n\n    gl_FragColor = color;\n}\n",{uNoise:0,uSeed:0})||this;return i.noise=o,i.seed=n,i}return function __extends(e,o){function __(){this.constructor=e}extendStatics(e,o),e.prototype=null===o?Object.create(o):(__.prototype=o.prototype,new __)}(NoiseFilter,e),Object.defineProperty(NoiseFilter.prototype,"noise",{get:function(){return this.uniforms.uNoise},set:function(e){this.uniforms.uNoise=e},enumerable:!1,configurable:!0}),Object.defineProperty(NoiseFilter.prototype,"seed",{get:function(){return this.uniforms.uSeed},set:function(e){this.uniforms.uSeed=e},enumerable:!1,configurable:!0}),NoiseFilter}(r.wn)}}]);